# utils/text_formatter.py

import re
from aiogram.utils.markdown import bold, italic, code, pre, link, underline, strikethrough
from aiogram.utils.formatting import Spoiler # Для использования Spoiler как объекта

def escape_markdown_v2(text: str) -> str:
    """
    Экранирует специальные символы MarkdownV2 в тексте,
    который будет использоваться в сообщениях Telegram (например, в тексте кнопок),
    чтобы избежать ошибок парсинга.
    """
    if not isinstance(text, str):
        text = str(text)

    # Все символы, которые имеют специальное значение в MarkdownV2.
    # Включая те, которые aiogram.utils.markdown может генерировать (например, * или _),
    # если они встречаются в пользовательском вводе или названиях из БД.
    # Обратный слеш '\' должен быть экранирован первым.
    # Точки '.' и восклицательные знаки '!' нужно экранировать,
    # если они не являются частью URL или в других контекстах,
    # но для простоты лучше экранировать их всегда, когда они могут быть проблемами.
    special_chars = r'_*[]()~`>#+-=|{}.!'

    # 1. Экранируем обратный слеш. Это делается первым, чтобы последующие замены
    # не добавляли лишних слешей к уже экранированным.
    text = text.replace('\\', '\\\\')

    # 2. Экранируем остальные специальные символы.
    # Используем re.sub для более точного контроля, чтобы гарантировать,
    # что мы не экранируем уже экранированный символ.
    # Однако для этого сценария replace обычно достаточно.
    for char in special_chars:
        text = text.replace(char, f'\\{char}')

    return text

# ... (остальной код в utils/text_formatter.py)