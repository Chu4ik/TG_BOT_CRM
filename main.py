# main.py
import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.strategy import FSMStrategy
from aiogram.types import BotCommand


from config import settings
from db.setup import engine # Correct for engine
from db.models import Base  # CORRECT for Base (Base is defined in models.py)
from handlers import common, admin, manager, cashier, inventory_add
from handlers.orders import add_client_order # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã –∏–∑ handlers.orders
from handlers.orders import add_addresses_order
from handlers.orders import add_product_order
from handlers.orders import add_datedeliveries_order
from handlers.orders import edit_order
from middlewares.role_middleware import RoleMiddleware

logging.basicConfig(level=logging.DEBUG) # <--- –ò–ó–ú–ï–ù–ï–ù–û: level=logging.DEBUG

# –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è aiohttp.client –∏ aiogram –Ω–∞ —É—Ä–æ–≤–µ–Ω—å DEBUG
logging.getLogger('aiohttp.client').setLevel(logging.DEBUG)
logging.getLogger('aiogram').setLevel(logging.DEBUG)
# SQLAlchemy –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ INFO, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –º–Ω–æ–≥–æ SQL-–ª–æ–≥–æ–≤
logging.getLogger('sqlalchemy.engine').setLevel(logging.INFO)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def set_main_menu_commands(bot: Bot):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é (–º–µ–Ω—é-–≥–∞–º–±—É—Ä–≥–µ—Ä–∞).
    """
    commands = [
        BotCommand(command="/new_order", description="üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑"), # –ò–∫–æ–Ω–∫–∞ –∫–∞—Ä–∞–Ω–¥–∞—à–∞/–±–ª–æ–∫–Ω–æ—Ç–∞
        BotCommand(command="/my_orders", description="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã"),         # –ò–∫–æ–Ω–∫–∞ –∫–æ—Ä–æ–±–∫–∏/–ø–æ—Å—ã–ª–∫–∏
        BotCommand(command="/edit_order_admin", description="‚úçÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑ (–ê–¥–º–∏–Ω)"), # –ò–∫–æ–Ω–∫–∞ –ø–∏—Å—å–º–∞ —Å —Ä—É—á–∫–æ–π
        BotCommand(command="/show_unconfirmed_orders", description="üìã –ü–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏ –∑–∞–∫–∞–∑–æ–≤"), # –ò–∫–æ–Ω–∫–∞ —Å–ø–∏—Å–∫–∞/–±–ª–æ–∫–Ω–æ—Ç–∞
        BotCommand(command="/sales_manager", description="üìà –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º"), # –ò–∫–æ–Ω–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–æ—Å—Ç–∞

        BotCommand(command="/payments", description="üí≥ –ü—Ä–∏–Ω—è—Ç—å –æ–ø–ª–∞—Ç—É"),       # –ò–∫–æ–Ω–∫–∞ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã
        BotCommand(command="/financial_report_today", description="üí∞ –û—Ç—á–µ—Ç –æ–± –æ–ø–ª–∞—Ç–∞—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è"), # –ò–∫–æ–Ω–∫–∞ –º–µ—à–∫–∞ –¥–µ–Ω–µ–≥/–º–æ–Ω–µ—Ç–æ–∫
        BotCommand(command="/cash_balance", description="üí≤ –û—Å—Ç–∞—Ç–æ–∫ –ø–æ –∫–∞—Å—Å–µ"),   # –ò–∫–æ–Ω–∫–∞ –¥–æ–ª–ª–∞—Ä–∞/–¥–µ–Ω–µ–∂–Ω–æ–≥–æ –º–µ—à–∫–∞
        BotCommand(command="/accounts_receivable", description="üìä –î–µ–±–∏—Ç–æ—Ä—Å–∫–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å"), # –ò–∫–æ–Ω–∫–∞ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã

        BotCommand(command="/add_delivery", description="üöö –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"), # –ò–∫–æ–Ω–∫–∞ –≥—Ä—É–∑–æ–≤–∏–∫–∞
        BotCommand(command="/adjust_inventory", description="üóÑÔ∏è –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Å–∫–ª–∞–¥—É"), # –ò–∫–æ–Ω–∫–∞ –∫–∞—Ä—Ç–æ—Ç–µ–∫–∏/—à–∫–∞—Ñ–∞
        BotCommand(command="/inventory_report", description="üîç –û—Ç—á–µ—Ç –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö —Ç–æ–≤–∞—Ä–∞"), # –ò–∫–æ–Ω–∫–∞ –ª—É–ø—ã/–ø–æ–∏—Å–∫–∞
    ]
    await bot.set_my_commands(commands)

async def main():
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(level=logging.INFO)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=settings.BOT_TOKEN)
    dp = Dispatcher(storage=MemoryStorage(), fsm_strategy=FSMStrategy.CHAT)

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è middlewares
    dp.message.middleware(RoleMiddleware())
    dp.callback_query.middleware(RoleMiddleware())

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤ (—Ö—ç–Ω–¥–ª–µ—Ä–æ–≤)
    dp.include_router(common.router)
    dp.include_router(admin.router)
    dp.include_router(manager.router)
    dp.include_router(cashier.router)
    dp.include_router(inventory_add.router)
    dp.include_router(add_client_order.router)
    dp.include_router(add_addresses_order.router)
    dp.include_router(add_product_order.router)
    dp.include_router(add_datedeliveries_order.router)
    dp.include_router(edit_order.router)

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–ª–∏ –µ—Å–ª–∏ –≤—ã –º–µ–Ω—è–µ—Ç–µ —Å—Ö–µ–º—ã)
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await set_main_menu_commands(bot)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())